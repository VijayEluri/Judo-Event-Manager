/*
 * EventManager
 * Copyright (c) 2008-2017 James Watmuff & Leonard Hall
 *
 * This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package au.com.jwatmuff.eventmanager.gui.scoring;

import au.com.jwatmuff.eventmanager.model.vo.Session;
import au.com.jwatmuff.genericdb.Database;
import au.com.jwatmuff.genericdb.transaction.TransactionNotifier;
import java.awt.GridLayout;

/**
 *
 * @author  James
 */
public class FightProgressionWindow extends javax.swing.JFrame {

    private Session matSession;
    private boolean matName;
    private int layoutType;
    private int noVertCells;
    private int noHorizCells;
    private double screenHight;
    private double screenWidth;
    private Database database;
    private TransactionNotifier notifier;
    private FightProgressionPanel fightProgressionPanel, fullScreenPanel;
    private ScoringColors colors = new ScoringColors();

    /** Creates new form FightProgressionWindow */
    public FightProgressionWindow(Database database, TransactionNotifier notifier, Session mat, FightProgressionOptionsDialog fpOptions) {
        initComponents();
        setLocationRelativeTo(null);
        this.matSession = mat;
        this.database = database;
        this.notifier = notifier;
        this.matName = fpOptions.getShowMatName();
        this.layoutType = fpOptions.getLayoutType();
        this.noVertCells = fpOptions.getNoVert();
        this.noHorizCells = fpOptions.getNoHoriz();
        this.screenHight = fpOptions.getScreenVert();
        this.screenWidth = fpOptions.getScreenHoriz();

        fightProgressionPanel = getFightProgressionPanel();
//        fullScreenPanel = getFightProgressionPanel();
        fightProgressionPanel.setColors(colors);
//        fullScreenPanel.setColors(colors);

        getContentPane().setLayout(new GridLayout(1,1));
        getContentPane().add(fightProgressionPanel);
        setTitle("Event Manager - Fight Progression - [" + mat.getMat() + "]");
    }
    
    private FightProgressionPanel getFightProgressionPanel() {
        FightProgressionPanel fpp = new FightProgressionPanel(matSession, matName, layoutType, noVertCells, noHorizCells, screenHight, screenWidth);
        fpp.setDatabase(database);
        fpp.setNotifier(notifier);
        fpp.setParentWindow(this);
        fpp.afterPropertiesSet();
        return fpp;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
